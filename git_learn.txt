一、概论
1、所有的版本控制系统，其实只能跟踪文本文件的改动，
	而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，
	如果要真正使用版本控制系统，就要以纯文本方式编写文件。

二、用法
1、Git添加文件需要add，commit一共两步
2、git diff 命令能够查看版本库中文件与当前文件的区别
3、git log命令显示从最近到最远的提交日志
4、HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id
5、git reflog查看命令历史，以便确定要回到未来的哪个版本
6、git checkout -- file 让这个文件回到最近一次git commit或git add时的状态，撤销还未提交到版本库对文件作出的修改
7、git reset HEAD file 撤销对用add添加到暂存区的修改

三、git概念理解
1、工作区（Working Directory）：也就是我们需要进行版本控制的文件夹
2、版本库（Repository）：git为我们创建的一个用来管理版本的库，git工作的阵地
3、过程理解：我们在工作区对文件（可能是多个文件）做了一次修改，需要首先将对文件的修改通过add命令提交到版本库中的
			 暂存区（stage或者叫index），可一次添加一个或多个文件的修改到暂存区中，然后通过commit命令将暂存区中的
			 修改提交到当前指针指向的分支（branch）中。

四、远程仓库
1、概念：Git是分布式版本控制系统，同一个Git仓库，可以分布到不同的机器上。
		 最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，
		 而且每台机器的版本库其实都是一样的，并没有主次之分